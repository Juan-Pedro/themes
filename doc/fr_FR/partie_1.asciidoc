:imagesdir: ../images

'''
== Interface graphique

[role="col-md-12 text-justify"]
--
Depuis la 1.6, une nouvelle interface graphique est apparue, de même que la colonne de gauche a disparu pour faire place à une fenêtre principale qui permettra d'accéder à toutes les fonctionnalités, tout en continuant à travailler sur son thème. +
Conforme à *_Jeedom_*(TM), le plus géant pour ajouter un thème est apparu, en dessous vous pouvez voir la nouvelle interface. +

image::presentation.png[]
--

[role="col-md-12"]
{nbsp} +

'''
=== Les fenêtres

[role="col-md-12 text-justify"]
--
Toutes les fenêtres sont déplaçable, leur position est sauvegardée, elle peuvent avoir plusieurs actions possible à partir de leur entête. +
image:close.png[]: la fenêtre peut être fermé - réinitialise la position de la fenêtre. +
image:accordeon.png[]: la fenêtre peut être réduite juste à son entête. +
image:dock.png[]: la fenêtre peut être docké. Docké une fenêtre consiste à déplacer la fenêtre sur le bord gauche ou haut, cette dernière disparaît, et un icône apparaît sur le bord gauche ou haut de l'écran. Il suffit de cliquer sur l'icône pour faire réapparaître la fenêtre. +
Certaine fenêtre n'ont aucune options, ce sont des fenêtres modals qui sont entièrement gérées par la fenêtre à laquelle elles sont liées. +
La fenêtre principale possède un icône unique spécial image:profil.png[], il permet de configurer l'environnement du plugin, deux profils existent par défaut, et vous pouvez créer le votre. +
Si la demande est forte je verrais à intégrer le profil aux thèmes en mode Design, pour l'instant le profil ne sert que sur mon plugin. +
--

[role="col-md-12"]
{nbsp} +

'''
=== Les barres d'outils

[role="col-md-12 text-justify"]
--
Une fois votre thème créé ou sélectionné, vous avez pouvoir travailler directement dessus, que ce soit de la page principale ou d'une page secondaire, le principe reste le même, la barre du haut sert à la gestion, la barre du coté gauche sert à la configuration. +
Les barres d'outils possèdent tous un onglet qui permet de cacher/voire la barre, il suffit de cliquer sur ce dernier pour voir/cacher la barre d'outils. +
--

[role="col-md-12"]
{nbsp} +

'''
=== Page Principale

'''
==== Barre Accueil

[role="col-md-12 text-justify"]
--
image:barrepage.png[] - En mode Normal. +
image:barrepageexpert.png[] - En mode Expert *+LINK+*. +
Le bouton *Général*, est l’équivalent classique aux autres plugins qui permet de revenir sur la page de choix d'un thèmes, les deux boutons qui suivent le bouton *Général* ne sont visible uniquement si le mode Expert de *_Jeedom_*(TM) est activé. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-4"]
--
image::infomations.png[]
--

[role="col-md-8 text-justify"]
--
image::info.png[]
Permet d'accéder aux informations du thème lié à *_Jeedom_*(TM), en dehors du nom du thème, les autres paramètres sont optionnels, elles permettent juste d'avoir une tuile dédié dans le dashboard. +
C'est de cette fenêtre que vous pourrez activer le mode Expert *+LINK+* du plugin. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
[role="col-md-4"]
--
image::progression.png[]
--

[role="col-md-8 text-justify"]
--
image::progress.png[]
Fonctionnalité rajouté depuis la 1.0.2, elle permet de savoir ou on en est de la création de son Design. +
La première barre indique si vous avez créé les pages dans le mode Design. +
La deuxième barre si vous avez injecté le code dans la page principale. +
la Troisième indique si le code a été injecté dans toutes les pages secondaires. +
La Quatrième barre indique la progression de l'injection du code dans les pages secondaires. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
[role="col-md-4 text-justify"]
--
image::cadres.png[]
Permet d'accéder à la gestion des pages secondaires qui sera traité dans le chapitre suivant *+LINK+*. Grisé si aucune page n'a été créée. +
--

[role="col-md-4 text-justify"]
--
image::delete.png[]
Permet d'effacer le thème, [label label-danger]#Attention# toutes les pages créées dans le mode Design seront aussi effacées. +
--

[role="col-md-4 text-justify"]
--
image::linkpages.png[]
Visible seulement si le mode Expert de *_Jeedom_*(TM) est activé, lien vers le plan associé du mode Design. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

[role="col-md-4 text-justify"]
--
image::configure.png[]
Visible seulement si le mode Expert de *_Jeedom_*(TM) est activé, Configuration du widget. +
--

[role="col-md-4 text-justify"]
--
image::save.png[]
Sauvegarde du thème sans injection du code - visible en mode Expert *+LINK+*. +
--

[role="col-md-4 text-justify"]
--
image::export.png[]
Exportation du thème - visible en mode Expert *+LINK+*. +
Version 1.8.3, exporte l'intégralité du thème pages secondaires comprise sauf les images et les boutons personnalisés. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

[role="col-md-4 text-justify"]
--
image::import.png[]
Importer un thème - visible en mode Expert *+LINK+*. +
--

[role="col-md-4 text-justify"]
--
image::raz.png[]
Efface le contenu de la page du mode Design de la page sélectionnée - visible en mode Expert *+LINK+*. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== Barre Menu

[role="col-md-12 text-justify"]
--
image:barremenu.png[] +
Pour des raisons de disposition dans la documentation l'image est en mode horizontal, mais il s'agit bien d'une barre d'outils verticale. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-4"]
--
image::fenetremenu.png[]
--

[role="col-md-8 text-justify"]
--
image::cog.png[]
Fenêtre permettant de configurer la barre du menu du thème. L'entête de la fenêtre fournit les dimensions du menu. +
*Position*: Position du menu +Haut+, +Bas+, +Gauche+, +Droite+. +
*Taille*: Dimension du menu, hauteur en position +Haut+ et +Bas+, Largeur en position +Gauche+ et +Droite+. +
*Texte*: Le champs à droite pour le texte voulu, le bouton pour cacher/voir le texte. +
*Cadre Unique*: Fonctionnement des pages secondaires en cadre unique ou multi-cadre. +
*Visible*: Voir/cacher la barre d'état. +
*Taille*: Trois choix possible pour la taille de la barre d'état +Petite+, +Moyenne+, +Grande+. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
[role="col-md-4"]
--
image::fenetreprincipale.png[]
--

[role="col-md-8 text-justify"]
--
image::tools.png[]
Fenêtre permettant de configurer la page principale. L'entête de la fenêtre indique les dimensions du cadre principal. +
*Largeur*: Largeur de la page principale. +
*Hauteur*: Hauteur de la page principale. +
*Image*: Image de fond de la page principale - les images sont à 'uploader' à partir du gestionnaire d'images. *+LINK+* +
*Id du Plan*: ID de la page principale dans le mode Design - readonly - activer le mode Expert *+LINK+* pour le modifier. +
*Id du Cadre*: ID de la page secondaire 'Général' dans le mode Design - readonly - activer le mode Expert *+LINK+* pour le modifier. +
*Sélection*: Sélectionner une Font disponible, depuis la 1.6.0 les fonts ne sont plus gérer à partir du plugin, il faut utiliser le gestionnaire de Fonts du plugin widget. +
*Taille*: Taille du texte de la barre de menu. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
[role="col-md-4"]
--
image::fenetreboutons.png[]
--

[role="col-md-8 text-justify"]
--
image::boutons.png[]
Fenêtre de gestions des boutons. +
*Type*: Type de barre de menu: +Boutons+, +Menu+, +Onglet+. +
*Taille*: Taille du bouton Home et des boutons: +Très Petit+, +Petit+, +Normal+, +Grand+ - non applicable pour +Menu+ et +Onglet+. +
*\"home\"*: Couleur du bouton "home" - non applicable pour +Menu+ et +Onglet+. +
*Visible*: Cacher/voir le bouton "home". +
*Justifié*: Occupe toute la barre de menu - uniquement avec +Menu+ ou +Onglet+ en position +Haut+ ou +Bas+, ne pas utiliser si les flèches de scrolling sont visible. +
*Groupé*: Groupe les boutons - non applicable pour +Menu+ et +Onglet+. +
*Décalage*: Décale les +Boutons+, +Menu+ ou +Onglet+ sur la droite pour donner la possibilité de centrer. + 
image:ajoutbouton.png[]: Ajouter un nouveau bouton. +
image:editbouton.png[]: Éditer le bouton sélectionné dans le sélecteur de droite. +
image:classerbouton.png[]: permet de ré-ordonner les +Boutons+, +Menu+ ou +Onglet+. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
[role="col-md-6"]
--
image::fenetrestyle.png[]
--

[role="col-md-6 text-justify"]
--
image::star.png[]
Fenêtre de gestions du style des cadres. +
*Couleur*: La première colonne permet de choisir la couleur de fond et la couleur du texte, par défaut elles sont grisées pour utiliser les couleurs de *_Jeedom_*(TM), cocher la case pour les modifier. +
*Bordure*: La deuxième colonne permet de configurer la bordure des cadres. +
*Ombre*: La troisième colonne permet de configurer l'ombre des cadres. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
[role="col-md-6"]
--
image::fenetreetat.png[]
--

[role="col-md-6 text-justify"]
--
image::trail.png[]
Fenêtre de gestion de la barre d'état. +
En premier lieu la barre d'état servait à afficher le breadcrumb, pour optimiser son utilisation, j'ai donné la possibilité d'y rajouter des widgets permettant de superviser certains objets, depuis n'importe quel pages puisque la barre d'état est visible de toutes les pages. +
A gauche vous avez un sélecteur de toutes vos pièces(appelé +Objets+ dans *_Jeedom_*(TM)), il suffit de sélectionner votre pièce pour que dans le carrousel de droite apparaissent les widget de type +Binary+. +
Servez vous des flèches du carrousel pour naviguer dans les widgets, image:acceptmini.png[] pour valider, image:deletemini.png[] pour annuler. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

[role="col-md-12 text-justify"]
--
[icon="../images/important.png"]
[IMPORTANT]
[label label-danger]#Attention#, les widgets utilisé dans la barre d'état doivent utilisé une +class+ au lieu de +id+ dans leur définitions. +
--

'''
[role="col-md-6 text-justify"]
--
image::design.png[]
Permet de créer les plans du Mode Design. Grisé lorsque toutes les pages sont créées, il suffit de modifier la taille de la page principale ou de passer en mode Expert *+LINK+* pour le dégrisé. +
--

[role="col-md-6 text-justify"]
--
image::bootstrap.png[]
Permet de sauvegarder le thème et d'injecter le code de la page principale dans le plan associé du Mode Design. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
=== Pages Secondaires

'''
==== Barre Pages

[role="col-md-12 text-justify"]
--
image:barresecondaire.png[] +
Le premier sélecteur permet de sélectionner la page secondaire, le deuxième sélecteur permet de sélectionner le cadre de la page courante. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-4 text-justify"]
--
image::return.png[]
Permet de retourner à la page principale. +
--

[role="col-md-4 text-justify"]
--
image::bootstrap.png[]
Permet de sauvegarder le thème et d'injecter le code de la page secondaire courante dans le plan associé du Mode Design. +
--

[role="col-md-4 text-justify"]
--
image::cadresadd.png[]
Permet d'ajouter un cadre à la page courante - grisé en mode +Cadre Unique+. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

[role="col-md-4 text-justify"]
--
image::delete.png[]
Permet de supprimer le cadre sélectionné - grisé en mode +Cadre Unique+. +
--

[role="col-md-4 text-justify"]
--
image::linkpages.png[]
Visible seulement si le mode Expert de *_Jeedom_*(TM) est activé, lien vers le plan associé du mode Design. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== Barre Actions

[role="col-md-12 text-justify"]
--
image::barreactions.png[]
Pour des raisons de disposition dans la documentation l'image est en mode horizontal, mais il s'agit bien d'une barre d'outils verticale. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-6 text-justify"]
--
image::deverouiller.png[]
Le cadre sélectionner est déverrouillé, vous pouvez ré-dimensionner le cadre sélectionné - grisé en mode +Cadre Unique+. +
--

[role="col-md-6 text-justify"]
--
image::verouiller.png[]
Le cadre sélectionner est verrouillé, vous ne pouvez plus redimensionner le cadre sélectionné - grisé en mode +Cadre Unique+. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

[role="col-md-4"]
--
image::fenetrecadres.png[]
--

[role="col-md-8 text-justify"]
--
image::cog.png[]
Fenêtre pour configurer le cadre sélectionné. +
*Titre*: Titre du cadre, le champs de droite pour le modifier, le bouton pour cacher/voir le titre. +
*Couleur*: Couleur utilisé pour le cadre - grisé par défaut pour utiliser la couleur par défaut de la page principale, cliquer sur le bouton pour la modifier. +
*Font*: Sélectionner une Font disponible, depuis la 1.6.0 les fonts ne sont plus gérer à partir du plugin, il faut utiliser le gestionnaire de Fonts du plugin widget. +
*Taille*: Taille de la Font du cadre. +
*Image*: Image de fond du cadre - les images sont à 'uploader' à partir du gestionnaire d'images. *+LINK+* +
*Opacité*: Opacité du cadre. +
*IFrame*: Inclut à partir de la 1.4.0, permet d'afficher le contenu d'un lien dans un cadre, le champs de droite pour le lien du contenu à afficher, le bouton permet de d'afficher/cacher l'IFrame. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
[role="col-md-4"]
--
image::fenetresvg.png[]
--

[role="col-md-8 text-justify"]
--
image::svg.png[]
Fenêtres de gestion des lignes SVG. +
image:addmini.png[]: pour rajouter une ligne SVG, la ligne est créer sur le coin gauche en haut. +
image:deletemini.png[]: efface la ligne SVG sélectionner. +
--

[role="col-md-12 text-justify"]
--
*[underline]#Rappel#*: A la base j'étais parti pour des plan 3D ou on plaçait les objets, mais un Jeedomien, nous a présenté son Design avec une vue 3D et les objets placé tout autour avec des lignes les reliant à leur position dans la pièce, très vite ce modèle m'a plus permettant d'avoir une vue plus clair, partant de ce constat j'ai voulu intégrer cette possibilité à mon plugin. +
Une fois créer la ligne se divise en 5 parties, les deux carrés d'extrémité, les lignes accrochées aux carrés, la ligne centrale, il suffit de cliquer sur chaque partie pour la déplacer. +
Pour déplacer une ligne il faut qu'elle soit sélectionnée, le dernier sélecteur permet de coloriser la ligne, les couleurs sont liées aux catégorie de *_Jeedom_*(TM), ce qui permet d'avoir des lignes de la même couleur que son widget. +

[role="col-md-12"]
{nbsp} +

[icon="../images/tip.png"]
[TIP]
[label label-warning]#Zoom#, un zoom automatique a été rajouté pour faciliter le Drag & Move,  il sera bientôt remplacer par une version manuel, à venir. +
--

[role="col-md-12"]
{nbsp} +

'''
[role="col-md-4"]
--
image::fenetredupliquer.png[]
--

[role="col-md-8 text-justify"]
--
image::duplicate.png[]
Fenêtre de duplication de page secondaire. +
permet de copier la page sélectionné dans la fenêtre vers la page courante. +

[icon="../images/warning.png"]
[WARNING]
[label label-error]#Attention#, par rapport aux anciennes versions cela à changer, on est passé de *[underline]#la page courante vers une autre page#* à *[underline]#une autre page vers la page courante#*. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== Barre Actions - Partie réservé aux objets

[role="col-md-12 text-justify"]
--
Pour des raisons de conception il est apparu qu'il était impossible de gérer une grille à partir du mode Design, à la demande de la communauté j'ai rajouté la possibilité de redimensionner les objets de même type, et de modifier la Font d'un objet. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-12 text-justify"]
--
image::objets.png[]
Permet de charger tout les objets de la page, une fois charger la barre d'actions est modifié, touts les objets peuvent être déplacer, le plugin utilise une grille avec un pas constant qui permet d'aligner les objets. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-12 text-justify"]
--
image::objetssave.png[]
Permet de sauvegarder les modifications apportées aux objets. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-12 text-justify"]
--
image::delete.png[]
Annule les modifications et le chargement des objets. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-12 text-justify"]
--
Une nouvelle barre va apparaître au dessus de chaque widget: image:barrewidget.png[], image:barreciseau.png[] copie les dimensions, image:barretrombone.png[] colle les dimensions. le plugin est capable de faire le distinguo entre les type d'objet,[underline]#par exemple: on ne pourra pas copier les dimensions d'un widget sur un scénario#. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-12 text-justify"]
--
image::mr.png[]
Le principe du copier coller marche comme le bouton +MR+ d'une calculatrice, à partir du moment ou on a mémorisé une dimension, elle est gardé en mémoire, il suffit d'appuyer sur ce boutons pour annuler toutes les dimensions mémorisées. +
--

[role="col-md-12 text-justify"]
--
[icon="../images/warning.png"]
[WARNING]
[label label-danger]#Attention#, parfois les objets peuvent apparaître en noir, c'est un bug récurrent que je n'arrive pas à corriger mais qui n'a aucun impact, vous pouvez modifier le widget les couleurs d'origine ne sont pas modifiées par le plugin. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-4"]
--
image::fenetrefonts.png[]
--

[role="col-md-8 text-justify"]
--
image::font.png[]
Sélectionner la Font et cliquez sur image:barrefont.png[] pour appliquer la font à l'objet - depuis la 1.6.0 les fonts ne sont plus gérer à partir du plugin, il faut utiliser le gestionnaire de Fonts du plugin widget. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
=== les Fenêtres boutons

==== Création/Édition des boutons

[role="col-md-4"]
--
image::fenetrebouton.png[]
--

[role="col-md-8 text-justify"]
--
Pour ajouter un bouton il suffit de rentrer le texte choisir sa couleur et de valider. +
image:trash.png[] permet d'effacer le bouton, si un plan est lié à ce bouton il sera effacé. +

[icon="../images/tip.png"]
[TIP]
[label label-danger]#Attention#, vous ne pourrez pas effacer un bouton si des entrées de sous-menu sont liées à un plan. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== Sous-menu

[role="col-md-4"]
--
image::fenetredropdown.png[]
--

[role="col-md-8 text-justify"]
--
Si vous avez cliqué sur oui pour les sous-menu cette fenêtre va vous permettre de gérer les entrées, cliquez sur image:plus.png[] pour rajouter une sous-entrée, cliquez sur image:trash.png[] pour effacer une entrée, si une sous-entrée est lié à un plan il sera effacé. +

[icon="../images/tip.png"]
[TIP]
Si vous effacez toutes les sous entrées, après sauvegarde le sous-menu sera transformé en bouton. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== Boutons personnalisés
[role="col-md-4"]
--
image::fenetreboutonperso.png[]
--

[role="col-md-8 text-justify"]
--
Une fois cliquez sur oui vous aurez accès aux boutons personnalisés, il suffit de sélectionner le bouton dans la liste, la barre d'offset sert pour les boutons avec une forme spécial, vous pourrez définir un décalage pour améliorer le rendu. +

[icon="../images/tip.png"]
[TIP]
Vous pouvez très bien avoir un bouton personnalisé et un sous-menu. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== Classer les boutons

[role="col-md-4"]
--
image::fenetreclasser.png[]
--

[role="col-md-8 text-justify"]
--
cliquer image:classerbouton.png[] pour accéder à cette fenêtre, ré-ordonner les boutons à votre convenance, et valider. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
=== Gestionnaire D'images

==== Fenêtre principale

[role="col-md-4"]
--
image::fenetreimages.png[]
--

[role="col-md-8 text-justify"]
--
image:gestionnaire.png[] Cliquez sur le bouton pour accéder au gestionnaires d'images. +
Lors de nos pérégrinations sur le mode Design, l'astuce utilisé pour manipuler des images est de créer un widget vide et de s'en servir pour déposer les images utilisés. Pour ce plugin, il fallait un moyen pour importer des images. Plutôt que de gérer les images thème par thème, j'ai opté pour implémenter un gestionnaire d'images que l'on pourra utiliser avec tout les plugins de *_Jeedom_*(TM).+
Le gestionnaire permet de gérer des catégories, *_Thèmes_* est la catégorie par défaut utilisé par le plugin, seul les images importées dans cette catégorie seront accessible dans les thèmes. Pour créer une nouvelle catégorie cliquez sur image:gestionnaire3.png[]. +
Pour importer une image cliquez sur image:gestionnaire4.png[], elle sera importé dans la catégorie sélectionné. +

[icon="../images/important.png"]
[IMPORTANT]
Avec la nouvelle interface graphique, les catégories fonctionnent mais je n'affiche que la liste par défaut. dans une prochaine version les catégories seront amenées à disparaître, les images ne servant pas au plugin peuvent être gérer du plugin widget maintenant. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== Liste des images

[role="col-md-4"]
--
image::fenetreimageslist.png[]
--

[role="col-md-8 text-justify"]
--
Liste de toutes les images servant au plugin que ce soit pour un thème ou pour un bouton personnalisé. +
Une fois l'image importé, image:cadretrash.png[] permet de la supprimer, image:gestionnaire6.png[] ouvre une boite de dialogue donnant les infos suivantes : +

* *URL*: Construit pour être utiliser comme lien locale *_Jeedom_*(TM) à utilise dans une balise directement par exemple un balise +<img>+. +
* *CSS* : construit pour être copier coller dans une classe +CSS+ ou un attribut style, pour mettre au choix dans un widget, un design voir sur le +custom.css+. +
* *HTTP* ; pour utilisation sur un site externe, par exemple un site déporté ou autres, c'est le moins utile s'il porte à confusion je le supprimerais, par contre dans ce cas pour les installations *DYI* et *Docker* le *+/jeedom+* doit être rajouter manuellement. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
=== Boutons personnalisés

==== Listes des boutons
[role="col-md-4"]
--
image::fenetrepersonnalises.png[]
--

[role="col-md-8 text-justify"]
--
cliquez sur le bouton image:ajouterperso.png[] pour créer un nouveau bouton personnalisé. +
Sous ce bouton vous trouverez la listes des boutons personnalisés créés. +
image:trash.png[] permet d'effacer le bouton personnalisé. +
image:editperso.png[] permet d'éditer le bouton personnalisé. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== Ajouter

[role="col-md-4"]
--
image::fenetrepersonnalisesajouter.png[]
--

[role="col-md-8 text-justify"]
--
Le but des boutons personnalisés était de fournir la possibilité de créer des boutons autres que ceux fournit par défaut par la librairie Bootstrap *+LINK+*. Deux méthodes sont fournis pour créer un bouton, par une *image*, ou par *CSS3*, cliquez sur le type de bouton que vous voulez créer. +
*Nom*: Nom du bouton, les noms ne sont pas unique, mais il sera plus simple de nommer différemment chaque boutons. +
*Font*: Sélectionner une Font disponible, depuis la 1.6.0 les fonts ne sont plus gérer à partir du plugin, il faut utiliser le gestionnaire de Fonts du plugin widget. +

[icon="../images/tip.png"]
[TIP]
Tant que vous n'avez pas appuyez sur le bouton +Annuler+, les données restent mémorisées. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== Boutons à partir d'une image

[role="col-md-4"]
--
image::fenetrepersonnalisesimage.png[]
--

[role="col-md-8 text-justify"]
--
*Hover*: L'image contient l'état 'hover', qui correspond au passage de la souris sur le bouton. +
*Active*: L'image contient l'état 'active', qui correspond au clique gauche de la souris sur le bouton. +
*Image*: Sélectionnez l'image du bouton - importez avec le gestionnaire d'image *+LINK+* du plugin. +
*Texte*: Affichage du texte du bouton ou non. +
*Taille*: Taille du texte. +
*Couleur*: Couleur du texte. +
*Font*: Sélectionner une Font disponible, depuis la 1.6.0 les fonts ne sont plus gérer à partir du plugin, il faut utiliser le gestionnaire de Fonts du plugin widget. +
Les boutons à base d'une image sont construite de tel manière que tout les états du boutons sont présent dans l'image, les différents états doivent être empilés dans l'ordre suivant: +Normal+, +Hover+, +Active+. +
*Hauteur de l'image* = *Hauteur de l'état Normal* * *Nombre d'état*+
L'exemple fournit possède les trois états, il montre bien comment l'image à été créée avec chaque état en dessous des autre. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== Boutons customisés en CSS

[role="col-md-4"]
--
image::fenetrepersonnalisescustom.png[]
--

[role="col-md-8 text-justify"]
--
La deuxième méthode pour créer un bouton est d'utiliser tout ce que nous offre le *CSS3*. +
Je me suis inspiré de http://css3buttongenerator.com/, je ne vais pas donner le détail complet ici, mais toutes les options du *CSS3* sont disponibles, à vous de vous amusez. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
== Création d'un thème Facile

=== Création

[role="col-md-12 text-justify"]
--
Pour appréhender le plugin nous allons développer dans cette partie la création d'un thème le plus simple possible, en utilisant le moins d'options possible. Pour commencer, nous allons définir la nature de notre projet :

* Nous adopterons le format Tablette horizontale (paramètres par défaut).
* La barre de menu sera située en 'Haut' (paramètres par défaut).
* Barre d'état apparente (paramètres par défaut).
* Les entrées de la barre de menu seront des Boutons (paramètres par défaut).
* Le design comportera 3 Pièces composé comme suis: RdC (Salon, Cuisine), Chambre.
* Mono-cadre (paramètres par défaut).
* On configura un style avec une bordure et une ombre pour un rendu visuel.

Nous allons commencer par créer un thème, cliquer sur image:ajout.png[] .Changeons le titre pour un message de bienvenue, cliquez sur image:cogmini.png[] puis changez le titre par +Bienvenue dans Notre Espace Domotique+. Le thème que nous désirons et pratiquement créer, ils nous restent plus qu'a configurer les boutons *+LINK+* et le style *+LINK+*. +
Cliquez sur image:boutonsmini.png[] et appuyez sur image:plus.png[] pour créer un nouveau bouton. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-5"]
--
image::rdcbouton.png[]
--

[role="col-md-7 text-justify"]
--
Notre premier bouton est un sous-menu, entrez +RdC+ dans le champ *Nom* et cliquez sur *Sous-menu* pour affichez les sous-entrées, cliquez sur image:plus.png[] pour ajouter une autre sous-entrée, remplissez chaque entrée par +Salon+ et +Cuisine+ puis validez, notre premier bouton est créé.
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

[role="col-md-5"]
--
image::chambrebouton.png[]
--

[role="col-md-7 text-justify"]
--
Le deuxième bouton est plus simple entrez +Chambre+ dans le champ *Nom* et validez. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

[role="col-md-12 text-justify"]
--
Maintenant que nos boutons sont créés, nous allons appliquer un style pour un meilleur rendu visuel, cliquez sur image:starmini.png[] pour configurer le style. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-5"]
--
image::styledemo.png[]
--

[role="col-md-7 text-justify"]
--
Ici chacun fait ce qu'il veut, pour notre démo j'ai choisi les paramètres suivant : +

* Bordure : *Taille*: +5+, *Rayon*: +5+, *Style*: +groove+, *Couleur*: +Bleu+
* Ombre : *Taille*: +10+, +10+, +10+, *Couleur*: +Bleu Clair+
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

[role="col-md-12"]
--
Voici le résultat: +

image::demo1.png[]
--

[role="col-md-12"]
{nbsp} +

'''
=== Design et Bootstrap

[role="col-md-5"]
--
image::design.png[]
image::bootstrap.png[]
--

[role="col-md-7 text-justify"]
--
Le but du plugin étant la création d'une structure pour le mode Design, nous allons aborder ici les deux boutons les plus importants du plugin. A cette étape de notre thème aucune page n'a encore été créée, le bouton image:bootstrapmini.png[] est grisé, ce chapitre va vous montrer comment les créer et comment injecter le code de la page principale. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

[role="col-md-12 text-justify"]
--
[icon="../images/tip.png"]
[TIP]
Depuis la 1.2.0, la sauvegarde est automatique, l'appui sur l'un des deux boutons provoque une sauvegarde en fin de traitement. +
--

[role="col-md-12"]
{nbsp} +

'''
==== image:design.png[] - Design

[role="col-md-5"]
--
image::planok.png[]
--

[role="col-md-7 text-justify"]
--
Ce bouton va permettre de créer les pages du mode Design, la page principale au format du thème et les pages secondaires au format du cadre principal. A chaque fois que vous charger un thème le plugin vérifié que les pages sont créer, si toutes les pages existent le bouton sera grisé. On peut dégriser le bouton facilement il suffit de modifier la taille de la fenêtre principale ou de passer en mode Expert *+LINK+*. Le bouton est dégrisé aussi dés qu'on rajoute un bouton. +
Vous pouvez constatez que le plugin crée une page supplémentaire, appelez +Général+ elle correspond à la page secondaire du bouton *home* qui est la page de présentation de votre mode Design. +

[icon="../images/tip.png"]
[TIP]
Si le bouton est dégrisé c'est que des modifications ont été apportées au thème qui demande de mettre à jour les pages. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

'''
==== image:bootstrap.png[] - Bootstrap

[role="col-md-5"]
--
image::bootstrapok.png[]
--

[role="col-md-7 text-justify"]
--
Arrivez à cette étape toutes les pages doivent être créées, ce bouton va permettre d'injecté le code dans la page principale pour pouvoir gérer tout votre Design, après toutes modifications il suffira de cliquez sur ce bouton pour mettre à jour la fenêtre principale. +
--

[role="row"]
{nbsp} +
[role="col-md-12"]
{nbsp} +

[role="col-md-12 text-justify"]
--
[icon="../images/tip.png"]
[TIP]
Si le plan de la page principale n'existe pas le bouton restera grisé, cliquez sur le bouton image:designmini.png[] pour palier ce problème.
--

[role="col-md-12"]
{nbsp} +

'''
=== Les Pages Secondaires

[role="col-md-12 text-justify"]
--
Le plugin devait s'arrêter à la création de la page principale, des pages secondaires et de l'injection du code Bootstrap sur la page principale, mais il est apparu important de pouvoir gérer les pages secondaires à partir du plugin pour pouvoir aussi en contrôler le fonctionnement. +
Les images qui serviront aux pages secondaires seront rajoutées avec le Gestionnaire d'images *+LINK+*, pour notre thème elles seront au format de notre cadre principale et seront créés à l'aide du logiciel link:http://www.sweethome3d.com/fr/[SweetHome 3D] ou autres logiciels de votre choix.+
--

[role="col-md-12"]
{nbsp} +

[role="col-md-12 text-justify"]
--
Ce chapitre à pour but de montrer comment configurer une page secondaire, nous sommes en configuration +mono-cadre+, la configuration +multi-cadres+ est identique sauf que vous pouvez créer autant de cadre que vous voulez. +
Nous nous occuperons d'abord des pièces, nous parlerons de la page *Général* par la suite puisque elle occupe un rôle à part. +
Pour la suite du projet, nous allons établir les différents modules dans chaque pièce :

* *Salon*: 1 capteur de présence, 1 lumière, 1 thermostat, Surveillance réseau
* *Cuisine*: 1 capteur de présence, 1 lumière
* *Chambre*: 1 capteur de présence, 1 lumière, 1 thermostat
--

[role="col-md-12"]
{nbsp} +

'''
==== Les pièces

[role="col-md-5"]
--
image::plansecondok.png[]
--

[role="col-md-7 text-justify"]
--
Commençons par sélectionner +Salon+ dans le sélecteur *Pages* +
Cliquez sur image:cogmini.png[]. +
Changeons +Titre+ par +Salon+, et sélectionnons l'image téléchargée avec le sélecteur *Image*. +
Il suffit de d'utiliser le bouton image:bootstrapmini.png[] pour mettre à jour la page secondaire _Salon_ dans le mode Design, la dernière étape étant de placer les widgets dans le mode Design. Répétons ces étapes pour les deux autres pièces. +
--

[role="col-md-12 text-justify"]
--
Voici le résultat final: +

image::salondemo.jpg[]
image::cuisinedemo.jpg[]
image::chambredemo.jpg[]
{nbsp} +

A ce stade votre Design est fonctionnel. +
--

[role="col-md-12"]
{nbsp} +

'''
==== Page Home

[role="col-md-12 text-justify"]
--
Cette page va servir de page d'accueil pour notre mode Design, elle permettra soit de centraliser des informations soit tout simplement afficher une image de votre maison en 3D, elle reste libre à votre imagination. Dans notre cas nous allons mettre divers informations :

image::generaldemo.png[]
--

[role="col-md-12"]
{nbsp} +

'''
==== Les lignes SVG

[role="col-md-12 text-justify"]
--
Bien qu'à cette étape votre Design soit fonctionnel, il m'est apparu intéressant de fournir un système qui permettrait de localiser dans la pièce ou est votre widget (ou virtuel, etc...), et c'est tout naturellement que j'ai mis en place les *lignes SVG*. Utilisez la fenêtre des lignes SVG pour ajouter une ligne. +
--

[role="col-md-12"]
{nbsp} +

[role="col-md-12"]
--
Voici ce que la donne dans la +Cuisine+

image::cuisinesvg.jpg[]
{nbsp} +

Il suffit de faire la même chose pour les autres pièces. +
--

[role="col-md-12"]
{nbsp} +

'''
=== Conclusion

[role="col-md-12 text-justify"]
--
Voila, votre thème et votre Design sont finalisés. Vous pouvez très bien le rajouter dans votre profil *_Jeedom_*(TM) pour y accéder directement. +
--

[role="col-md-12 text-justify"]
--
[icon="../images/tip.png"]
[TIP]
Il est possible de créer des profils 'invité', il suffit au niveau du profil *_Jeedom_*(TM) de pointer vers la pièce désirée au lieu de la page principale, ce qui permettra à l'invité d'accéder à toutes les fonctions de la pièce sans avoir accès à la barre de menu et aux autres pages secondaires. +
--
